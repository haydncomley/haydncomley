---
import { TProjectBlocks } from "../../types/TProject";
import ContentBlock from "./ContentBlock.astro";

interface Props {
    blocks: TProjectBlocks[];
}

const { blocks } = Astro.props;
---

<div class="content">
    { blocks.map((block) => (
        <ContentBlock width={block.size.width} height={block.size.height}></ContentBlock>
    )) }
    <!-- <ContentBlock width={1}></ContentBlock>
    <ContentBlock height={2}></ContentBlock>
    <ContentBlock height={1} width={2}></ContentBlock>
    <ContentBlock height={3} width={2}></ContentBlock>
    <ContentBlock height={1} width={2}></ContentBlock> -->
</div>

<style lang="scss">
    @use "easy-theme" as theme;

    .content {
        $gridSize: 10rem;
        width: 100%;
        height: 100%;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax($gridSize, 1fr));
        grid-auto-rows: minmax($gridSize, 1fr);
        border-collapse: collapse;
        grid-gap: theme.Variable('border-thickness');
        overflow: auto;
        // scroll-snap-type: y proximity;

        // TODO: Revisit Scrollbar - unsure of how to style it
        // &::-webkit-scrollbar {
        //     width: calc(theme.Variable('border-thickness') * 2);
		// }
		
		// &::-webkit-scrollbar-track {
        //     background-color: theme.Color('primary', 'darker');
        //     border-left: theme.Variable('border');
		// }
		
		// &::-webkit-scrollbar-thumb {
        //     background-color: theme.Color('primary', 'dark');
        //     border-left: theme.Variable('border');
        //     transition: .15s ease;

        //     &:hover {
        //         background-color: theme.Color('primary');
        //     }
		// }

        &::-webkit-scrollbar {
            display: none;
        }

        @include theme.Mobile {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: unset;

            &::-webkit-scrollbar {
                display: none;
            }
        }
    }
</style>
---
interface Props {
    width?: number;
    height?: number;
    type: string;
}

const { width = 1, height = 1, type } = Astro.props;
---

<div class:list={['contentBlock', type]}><slot></slot></div>

<style lang="scss" define:vars={{ width, height }}>
    @use "easy-theme" as theme;

    .contentBlock {
        grid-column: auto / span var(--width);
        grid-row: auto / span var(--height);
        box-shadow: 0 0 0 theme.Variable('border-thickness') theme.Contrast('primary');
        scroll-snap-align: center;
        
        // &:nth-child(2n - 1) {
        //     background-color: theme.Color('primary', 'dark');
        // }

        &:nth-child(2n - 1) {
            background-color: theme.Color('primary', 'darker');
        }

        &:nth-child(3n - 1) {
            background-color: theme.Color('primary', 'dark');
        }

        @include theme.Mobile {
            &:empty {
                display: none;
            }
        }
    }
</style>